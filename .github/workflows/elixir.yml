name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.14.2]
        otp: [25.2]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
        otp-version: ${{ matrix.otp }} # Define the OTP version [required]
    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache #id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        working-directory: ./utils
        run: |
            mix local.rebar --force
            mix local.hex --force
            mix deps.get
    - name: Check code format
      working-directory: ./utils
      run: mix format --check-formatted
    - name: Check compilation warnings
      working-directory: ./utils
      run: mix compile --warnings-as-errors
    - name: Run tests
      working-directory: ./utils
      run: mix test --exclude=skip_ci --warnings-as-errors

  codespell:
    name: Check for spelling errors
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: codespell-project/actions-codespell@master
      with:
        check_filenames: true
        check_hidden: true
        skip: "./.git,./utils/.credo.exs,./utils/lib/assets*"
        ignore_words_list: falsy
