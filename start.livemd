# Course Outline

## Week 1 (Livebook Setup)

### 1. Course Overview
* Reading
   * Command Line
   * Elixir (ASDF)
   * Git
   * Livebook
* Exercises
   * Command Line Family Tree
   * IEx Terminal Math
   * Student Info Form
   * Livebook Recovery Practice

### 2. Basics (Simple Types, Operators, Variables, Comments)
* Reading
   * [Comments](reading/comments.livemd)
   * [Arithmetic](reading/arithmetic.livemd)
   * [Strings](reading/strings.livemd)
   * [Booleans](reading/booleans.livemd)
   * [Comparison Operators](reading/comparison_operators.livemd)
   * [Variable Binding](reading/variable_binding.livemd)
* Exercises
   * [Arithmetic](exercises/arithmetic.livemd)
   * [Calculate Loading](exercises/calculate_loading.livemd)
   * [Mad Libs](exercises/mad_libs.livemd)
   * [Boolean Operators](exercises/boolean_operators.livemd)
   * [Guessing Games](exercises/guessing_games.livemd)
   * [Rock Paper Scissors](exercises/rock_paper_scissors.livemd)

1. Complex Types (atom, tuples, list, keyword list, map, mapset)
   * Shopping List
   * Family Tree
   * Mazes
   * Treasure Hunt
2. Modules, Functions, Structs, Control Flow
   * Character Generator
   * Naming Numbers
   * Pokemon Battle
   * Custom Rock Paper Scissors
   * Rock Paper Scissors Lizard Spock
     5.

## Week 2

1. Problem Solving & Enumeration (ranges, map, filter, all, any, count, find, random)
   * FizzBuzz
   * Is Anagram?
   * AOC Day 1 Given a string of measurements
     * How many measurements have increased? [1, 2, 1] -> 1
     * What increments have they changed by? [1, -1]
   * Bottles of Soda
   * Voter Count
   * Character Generator
2. Comprehensions, Enum.reduce
   * Item Generator
   * Re-Implement Enum filter with reduce.
   * Sum Numbers (from a list, from a map)
   * Tally Votes
   * Voter Power
   * Given a set of measurements, what is their total positive change? (200, 250, 200) would be 50
   * Given a set of movement instructions, what is your final position? (0, 0) :up :right (1, 1)
   * Find the Average
3. Built-In Modules (Map, Tuple, List, Date & Time)
   * Perform Common Operations
   * Sublist
   * Determine a winning Bingo Board
   * Number Wordle
   * Tic Tac Toe
4. Guards, Pattern Matching
   * Which of the following match?
   * Treasure Hunt (Pattern Matching)
   * Rock Paper Scissors
   * No Conditional Fizz Buzz
   * Kitchen Calculator (Converting Measurements)
   * Currency Conversion
   * Create User Struct - Send User Email only if they have an email
5. String Manipulation (Regex, Charlist vs Strings)
   * Email Validation
   * Phone Number Parsing
   * Word Count
   * Classified (Find and Replace classified words in text)
   * Caesar Cypher
   * rollable expressions (find d20 expressions and replace them)
   * https://regexone.com/

## Week 3

1. Polymorphism, Protocols & Behaviors
   * Math Module
   * Pokemon Protocols
   * RPG Abilities
   * Battle Map
2. Performance (Immutability, Streams, Lists Vs Tuples Vs Maps Vs Mapsets, Big O, Benchee, :Timer) & Recursion
   * Benchmark Common Operations Maps, Lists, Tuples, MapSet
   * Benchmark Previous Exercises (FizzBuzz, NonConditional FizzBuzz, Bottles Of Soda)
   * Re-implement Enum Module
   * Flatten List
   * Count Votes, Split Votes
   * Fibonacci
   * Sublist (Again but recursively with performance expectations)
   * Lucas Numbers
   * Factorial
   * Anagram
3. 
4. File, .iex Scripts, Persistence, Data Validation (Ecto Changesets) (+Binary)
   * Determine the File Type (provided a png, jpg, etc)
   * Sign Up Form
   * Dog Show (need certain breeds, trims, etc. Use errors to rank score)
   * File Todo List
   * iex script to count image types in a directory.
   * iex script to determine how many files of each extension type exist in a dir
5. Processes (Processes, Generic Server, Genserver, Agents, ETS)
   * Agent Key Value Store
   * Traffic Light Genserver
   * Rock Paper Scissors Genserver
   * ETS Spell Book
   * Pokemon Server

## Week 4 (Dev Setup)

1. Mix Tooling (Credo, Dialyzer, Config, Deps, Documentation, ExUnit)
   * Tested Fibonacci
   * File Based Journal CLI (auto create daily note, create note with blueprint)
   * Math Module w/ TypeSpecs
   * Wordle CLI
2. Supervisor Basics and Fault Tolerance (+Task)
   * Lesson: Mining Simulator (Supervise workers that harvest resources on an interval, Task Supervise special workers)
   * Bomb Defuse (Reset Bomb Timer By Killing Process)
   * Math Game (Randomly Generate Simple Math Questions, restart timer upon correct answer)
3. BEAM, Nodes and Distributed Elixir
   * Distributed Rock Paper Scissors
   * Distributed Chat App
4. Ecto & Database Basics
   * Lesson: Persisted Todo List
   * Database Journal CLI (Journals, Notes, Tags, Insert, Update, Delete)
     5.

## Week 5

1. APIs & Parsing JSON
   * Pokemon CLI
   * Weather CLI
   * Github Issue Tracker
2. Networking Basics & Plug 
   * Lesson: Build an Elixir HTTP Server from scratch
   * Build a Caching HTTP Proxy
3. Macros and `use`
   * Lesson: Rewrite ExUnit
   * Lesson: Use unquote() to Enumerate multiple tests.
   * Create a custom unless function
   * Override + to concat numbers
   * Override Macros to allow using + with lists and other data types. `use` the module to inject `FlexibleMath`.
4. Deploying Mix Project
   * Publish a Math hex package
   * Publish the HTTP Server
     5.

## Week 6 8-12 (Phoenix Setup)

1. Phoenix Framework & Generators (+ Testing Patterns)
   * Lesson: Build a Personal Website
   * Pokemon Search Site
2. HTML & CSS (+ Flex, Grid)
   * Lesson: Style Personal Website
   * https://www.w3schools.com/css/exercise.asp?filename=exercise_selectors1
   * https://www.w3schools.com/html/exercise.asp?filename=exercise_html_attributes1
   * https://flexboxfroggy.com/
   * Piet Mondrian Box Art https://learnodo-newtonic.com/wp-content/uploads/2016/09/Composition-with-Large-Red-Plane-Yellow-Black-Gray-and-Blue-1921-Piet-Mondrian.jpg
3. Ecto & RDBMS & SQL & Seeding Data
   * Lesson: Build a Blog
   * https://www.w3schools.com/sql/exercise.asp?filename=exercise_select1
   * Todo List CRUD app
   * Music Artist Search (with seed data from .json) (Artist, Album, Song)
4. Tailwind
   * Lesson: Configure Tailwind with the Blog
   * Recreate Card Component
   * Create Responsive Navigation Bar
   * Configure Tailwind with Music Artist Search. Add styles from Mock.
5. UX/UI Design + Accessibility (ColorZilla, Axe, Figma)
   * Use Axe to Improve Blog Accessibilty. Add Tab Navigation.
   * Use ColorZilla and Compare Color Combinations with https://toolness.github.io/accessible-color-matrix/
   * Start Planning Your Final Project in Figma.

## Week 7

1. Phoenix Authentication & Permissions
   * Lesson: Add Users to Blog Site
   * Add Users to Music Artist Search
   * Add Personal Playlists to Music Artist Search
   * Add Shared Playlists to Music Artist Search
2. LiveView (+ Testing Patterns)
   * Lesson: Blog Post Search
   * Responsive Music Artist Search
   * Validated Create Artist Form
3. JavaScript & JS Interoptability & AlpineJS
   * Lesson: Blog Post Search Pagination
   * Lesson: Alpine JS Counter
   * Lesson: Add Phone Number Validation to Blog Site
   * Music Scroll Pagination
   * Alpine JS Song Like Button
   * Current Date Display
4. PubSub & Channels
   * Lesson: Live Update Blog List
   * Lesson: Live Comments On Blog Post
   * Live Multiplayer Rock Paper Scissors
   * Create a Chat App
   * Create Chat Rooms in the Chat App
5. GraphQL & Absinthe (+ Testing Patterns)
   * Lesson: Recipe App
   * Music Search App w/ GraphQL

## Week 8

1. TDD Techniques (Red Green Refactor), Code Clarity, Mix Testing Tools (--slowest, --stale, tags, Elixir Test extension)
2. Metrics, Telemetry, Live Dashboard
3. Factories & Mocks (ExMachina, Mox)
   * Twilio SMS App
4. Property Based Testing (Stream Data) + E2E Testing (Wallaby)
   * Test Music Filters
   * E2E Test Rock Paper Scissors App
5. Code Coverage, Github Actions & Hooks
   1. Rock Paper Scissors Pre-Commit Credo hook
   2. Rock Paper Scissors Pre-Push Test hook
   3. Rock Paper Scissors Code Coverage

## Week 9

1. Software & Product Management (Agile, StandUps)
2. Architecture Design & Patterns (Diagrams, UML, CQRS/ES, Contexts, MVC)
3. Advanced Livebook (Graphs, Tables, Connecting Projects)
4. Open Source Patterns & Advanced Github (PRs, Forking, Cloning, Issues)
   5.

## Week 10

1. Emailing & Swoosh
   * Contact Form On the Blog Site.
2. Stripe
   * Donate Button On the Blog Site.
   * Purchase Songs on Music App
3. Oban
   * Schedule Blog Post Publish
   * Schedule Email Reminder
4. RabbitMQ
5. Mnesia
   * Build a Link Shortener

## Week 11

1. Umbrella Projects
2. Supervision Trees, Worker Pools, Tasks
3. Nodes, Clustering
4. Deployment w/ Kubernetes & Distillery
   5.

## Week 12 (Dedicated to Final Project)

1. 
2. 
3. 
4. 5.
