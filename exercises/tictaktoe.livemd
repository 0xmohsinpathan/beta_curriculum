# Tic Tak Toe

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.3"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "utils"}
])
```

## Navigation

[Return Home](../start.livemd)

## Tic Tak Toe

You're going to create a game of tic tak toe.

In tic tak toe, players take turns placing either an `X` or an `O` onto a 3 by 3 grid.

In the Elixir cell below,

* Create a `TicTakToe` module with a `play/3` function.

* `play/3` should accept a game board as the first parameter.

* `play/3` should accept a tuple for coordinates as the second parameter.
  The coordinates should match the following.
  ![](images/tic_tac_toe_coordinates.png)

* `play/3` should accept a string of either `"X"` or `"O"` for the third parameter.

* `play/3` should return a new updated game board

* A game board should be a list of lists like so

  ```elixir
  [
    [nil, nil, nil],
    [nil, nil, nil],
    [nil, nil, nil],
  ]
  ```

Which would represent the following tic tac toe board.

![](images/empty_tic_tac_toe.png)

* `play/3` should return a new game board with the `nil` replaced with either an `X` or an `O`.

* **BONUS**: Ensure that the same player cannot play twice in a row.

* **BONUS**: Ensure that a player cannot play in an already filled spot.

* **BONUS**: Omit the `"X"` and `"O"` parameter and instead automatically figure out who's turn it is.
  (X always plays first)

Putting that together you would get:

<!-- livebook:{"force_markdown":true} -->

```elixir
board = [
    [nil, nil, nil],
    [nil, nil, nil],
    [nil, nil, nil],
]

move_1 = TicTakToe.play(board, {0, 2}, "X")
[
    [nil, nil, "X"],
    [nil, nil, nil],
    [nil, nil, nil],
]

move_2 = TicTakToe.play(board, {1, 1}, "O")
[
    [nil, nil, "X"],
    [nil, "O", nil],
    [nil, nil, nil],
]
```

<!-- livebook:{"break_markdown":true} -->

### Your Solution:

```elixir

```
