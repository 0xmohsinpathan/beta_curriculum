# Tic Tak Toe

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.3"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "utils"}
])
```

## Navigation

[Return Home](../start.livemd)

## Tic Tak Toe

You're going to create a game of tic tak toe.

In tic tak toe, players take turns placing either an `X` or an `O` onto a 3 by 3 grid.

The grid will be represented with the following coordinates.

![](images/tic_tac_toe_coordinates.png)

In this game, the player will say the coordinate they want to play, and either an `"X"` or an `"O"` like so:
This should return a new version of the board with that coordinate filled in.

<!-- livebook:{"force_markdown":true} -->

```elixir
board = [
  [nil, nil, nil],
  [nil, nil, nil],
  [nil, nil, nil]
]

move1 = TicTakToe.play(board, {0, 0}, "X")
[
  ["X", nil, nil],
  [nil, nil, nil],
  [nil, nil, nil]
]

TicTakToe.play(move1, {1, 1}, "O")
[
  ["X", nil, nil],
  [nil, "O", nil],
  [nil, nil, nil]
]
```

* **BONUS**: Ensure that the same player cannot play twice in a row.

* **BONUS**: Ensure that a player cannot play in an already filled spot.

* **BONUS**: Omit the `"X"` and `"O"` parameter and instead automatically figure out who's turn it is.
  (X always plays first)

Enter your answer below.

```elixir
defmodule TicTakToe do
  def play(board, coordinate, symbol) do
  end
end

Utils.feedback(:tic_tak_toe, TicTakToe)
```
