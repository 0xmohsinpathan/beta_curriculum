# Anagram

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.3"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "utils"}
])
```

## Navigation

[Return Home](../start.livemd)

## Anagram

Two words that contain all the same letters are anagrams.
For example **bored** and **robed** are anagrams.

In the Elixir cell below:

### Step 1

* Create a module `Anagram`
* Create a function on the `Anagram` module `is_anagram?/2`
* `is_anagram?/2` should accept two lowercase strings and determine if they are anagrams.

### Step 2

* Create a function on the `Anagram` module `filter_anagrams/2`.
* `filter_anagrams/2` should accept a string as the first parameter, and a list of strings as the second
  parameter.
* `filter_anagrams/2` should filter out values in the list of strings that are not anagrams of the first parameter string.

For example:

<!-- livebook:{"force_markdown":true} -->

```elixir
Anagram.is_anagram?("stop", "pots")
true

Anagram.filter_anagrams("acres", ["cares", "races", "scare", "tree", "bear"])
["cares", "races", "scare"]
```

```elixir
defmodule Anagram do
  def is_anagram?(word, possible_anagram) do
  end

  def filter_anagrams(word, possible_anagrams) do
  end
end

Utils.feedback(:is_anagram, Anagram)
```
