# File System Todo

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.3"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:faker, "~> 0.17.0"},
  {:utils, path: "utils"}
])
```

## Navigation

[Return Home](../start.livemd)

## Overview

You're going to create a TodoList application with persistence using a file system.

The `TodoList` module should be able to:

* `add/1` an item to our todo list.

<!-- livebook:{"force_markdown":true} -->

```elixir
TodoList.add("go get groceries")
{:ok, ["go get groceries"]}
```

* `list/1` the items in our todo list.

<!-- livebook:{"force_markdown":true} -->

```elixir
TodoList.list()
["go get groceries"]
```

1. `complete/1` an item in our todo list. Return the elements currently in the todo list.

<!-- livebook:{"force_markdown":true} -->

```elixir
TodoList.complete("go get groceries")
{:ok, []}
```

<!-- livebook:{"break_markdown":true} -->

Enter your answer in the Elixir cell below.

```elixir
defmodule TodoList do
  def add(item) do
  end

  def complete(item) do
  end

  def list do
  end
end
```
