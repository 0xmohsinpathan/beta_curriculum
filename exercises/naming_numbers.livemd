# Converting Data

## Setup

```elixir
Mix.install([{:kino, github: "livebook-dev/kino"}])
```

## Naming Numbers

In the Elixir cell below, create a function `convert_to_named_integer` which accepts a
single digit integer and returns its string representation. So `1` would become `"one"`

```mermaid
flowchart
   0 --> zero
   1 --> one
   2 --> two
   3 --> three
   4 --> four
   5 --> five
   6 --> six
   7 --> seven
   8 --> eight
   9 --> nine
```

```elixir

```

```elixir
ExUnit.start(auto_run: false)

:persistent_term.put(:convert_to_named_integer, convert_to_named_integer)

defmodule NamingNumbers do
  use ExUnit.Case

  test "convert_to_named_integer" do
    answer_key = %{
      0 => "zero",
      1 => "one",
      2 => "two",
      3 => "three",
      4 => "four",
      5 => "five",
      6 => "six",
      7 => "seven",
      8 => "eight",
      9 => "nine"
    }

    convert_to_named_integer = :persistent_term.get(:convert_to_named_integer)

    Enum.each(answer_key, fn {key, value} ->
      assert convert_to_named_integer.(key) === value
    end)
  end
end

ExUnit.run()
```

## Numbering Names

In the Elixir cell below, create a function `convert_to_integer` which accepts a
number's name and returns its string representation. So `"one"` would become `1`.

In addition to accepting lowercase name, also accept uppercase names so `"One"` would become `1`.

```mermaid
flowchart
  zero --> 0
  one --> 1
  two --> 2
  three --> 3
  four --> 4
  five --> 5
  six --> 6
  seven --> 7
  eight --> 8
  nine --> 9
```

```mermaid
flowchart
  Zero --> 0
  One --> 1
  Two --> 2
  Three --> 3
  Four --> 4
  Five --> 5
  Six --> 6
  Seven --> 7
  Eight --> 8
  Nine --> 9
```

```elixir

```
