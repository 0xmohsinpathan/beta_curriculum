# Livebook Recovery

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.8.0", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Recovering Deleted Cells

Delete the following Elixir cell and recover it using the bin <i class="ri-delete-bin-fill"></i>
Button on the sidebar.

```elixir
"delete me and recover me!"
```

## Undo Edits

Edit the following Elixir cell to say `"hello <your_name>"` where `<your_name>` is your name.

Then use <kbd>CTRL</kbd>+<kbd>Z</kbd> (Windows & Linux) or <kbd>CMD</kbd>+<kbd>Z</kbd> (MacOS) to undo your edit.

```elixir
"Hello <your_name>"
```

## Recover File

Delete the following content inside of the Elixir cell below. Then revert this livebook's file to recover the lost content.

You may choose to use one of many methods including the command line, GitHub Desktop, or the Source Control tab of Visual Studio Code.

If using the command line, you can go to the project folder in your command line and run:

```sh
$ git reset HEAD exercises/livebook_recovery.livemd
```

Alternatively, discard the changes on this `exercises/livebook_recovery.livemd`
file with Visual Studio Code or GitHub Desktop.

````elixir
"delete and recover me!"
```## Up Next

| Previous | Next |
| :------- | ----:|
| [Command Line Family Tree](../exercises/command_line_family_tree.livemd) | [GitHub Engineering Journal](../exercises/github_engineering_journal.livemd) |

## Mark As Completed

<!-- livebook:{"attrs":{"source":"[_, file_name] = Regex.run(~r/([^\\/]+).livemd/, __ENV__.file)\nprogress_path = __DIR__ <> \"/../student_progress.json\"\nexisting_progress = File.read!(progress_path) |> Jason.decode!()\n\ndefault = Map.get(existing_progress, file_name, false)\n\nform =\n  Kino.Control.form(\n    [\n      completed: input = Kino.Input.checkbox(\"Mark As Completed\", default: default)\n    ],\n    report_changes: true\n  )\n\nTask.async(fn ->\n  for %{data: %{completed: completed}} <- Kino.Control.stream(form) do\n    File.write!(progress_path, Jason.encode!(Map.put(existing_progress, file_name, completed)))\n  end\nend)\n\nform","title":"Track Your Progress"},"chunks":null,"kind":"Elixir.HiddenCell","livebook_object":"smart_cell"} -->

```elixir
[_, file_name] = Regex.run(~r/([^\\/]+).livemd/, __ENV__.file)
progress_path = __DIR__ <> "/../student_progress.json"
existing_progress = File.read!(progress_path) |> Jason.decode!()

default = Map.get(existing_progress, file_name <> "_exercise", false)

form =
  Kino.Control.form(
    [
      completed: input = Kino.Input.checkbox("Mark As Completed", default: default)
    ],
    report_changes: true
  )

Task.async(fn ->
  for %{data: %{completed: completed}} <- Kino.Control.stream(form) do
    File.write!(progress_path, Jason.encode!(Map.put(existing_progress, file_name, completed)))
  end
end)

form
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout solutions
$ git checkout -b livebook-recovery-exercise
$ git add .
$ git commit -m "finish livebook recovery exercise"
$ git push origin livebook-recovery-exercise
```

Create a pull request from your `livebook-recovery-exercise` branch to your `solutions` branch.
Please do not create a pull request to the DockYard Academy repository as this will spam our PR tracker.

**DockYard Academy Students Only:**

Notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.
You (or your teacher) may merge your PR into your solutions branch after review.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.
## Up Next

| Previous | Next |
| :------- | ----:|
| [Command Line Family Tree](../exercises/command_line_family_tree.livemd) | [GitHub Engineering Journal](../exercises/github_engineering_journal.livemd) |
````
